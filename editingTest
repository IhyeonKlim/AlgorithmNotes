import java.util.*;

class Solution {
    public int[] solution(int[] num_list, int n) {
        List<Integer> answer = new ArrayList<>();
        for(int i = 0; i< num_list.length; i = i+n){
            answer.add(num_list[i]);                
        }
        int size = answer.size();
        int[] rtrn = answer.stream().mapToInt(i->i).toArray();
        return rtrn;
    }
}

List.stream().mapToInt(i->i).toArray();



int N = num_list.length % n == 0 ? num_list.length / n : num_list.length / n +1;
int idx = 0;
int[] answer = new int[N];
for(int i = 0; i < num_list.length; i+=n){
  answer[idx++] = num_list[i];
}

Arrays.stram(arr).map(i-> i >=50 && i % 2 == 0 ? i / 2 : i < 50 && i % 2 != 0 ? i * 2 : i).toArray();

for(int i = k; i <=n; i+=k) list.add(i);
list.stream().mapToInt(Integer::intValue).toArray();

IntStream.rangeClosed(1,n).filter(i->i % k ==0).toArray();

for(int i = 0; i < string.length(); i++){
  Character.toString(string.charAt(i)).eqauls("w");
}

for( char ch : cotrol.toCharArray()){
  if(ch == 'w') n += 1;
}

String[] arr = control.split("");


        for(int i = 0; i < control.length(); i++){
            String string = Character.toString(control.charAt(i));
            if(string.equals("w")){
                n+=1;
            }else if(string.equals("s")){
                n-=1;
            }else if(string.equals("d")){
                n+=10;            
            }else if(string.equals("a")){
                n-=10;
            }
        }
        for(char ch : control.toCharArray()){
            if(ch == 'w') n+=1;
            else if (ch == 's') n-=1;
            else if (ch == 'd') n+=10;
            else n-=10;
        }
        return n;

String.valueOf(); // NPE를 발생시키지 않는다.
String.valueOf(여기다 값을 넣는다. charArray 들어가더라.)
